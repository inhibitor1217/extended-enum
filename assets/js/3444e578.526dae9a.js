"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[72],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return v}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=s(n),v=a,m=d["".concat(p,".").concat(v)]||d[v]||c[v]||i;return n?r.createElement(m,o(o({ref:t},u),{},{components:n})):r.createElement(m,o({ref:t},u))}));function v(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6191:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return p},default:function(){return v},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return c}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),o=["components"],l={sidebar_position:2},p="Basics",s={unversionedId:"basic",id:"basic",title:"Basics",description:"extend preserves the behavior of native TypeScript enums.",source:"@site/docs/basic.md",sourceDirName:".",slug:"/basic",permalink:"/docs/basic",editUrl:"https://github.com/inhibitor1217/extended-enum/docs/basic.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Get Started",permalink:"/docs/get-started"},next:{title:"Parsing",permalink:"/docs/extended-features/parsing"}},u={},c=[{value:"Accessing values",id:"accessing-values",level:2},{value:"Exclusive typing",id:"exclusive-typing",level:2},{value:"Reverse mapping",id:"reverse-mapping",level:2},{value:"Conversion to primitives",id:"conversion-to-primitives",level:2},{value:"<code>keyOf</code>",id:"keyof",level:3},{value:"<code>valueOf</code>",id:"valueof",level:3}],d={toc:c};function v(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"basics"},"Basics"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"extend")," preserves the behavior of native TypeScript enums."),(0,i.kt)("h2",{id:"accessing-values"},"Accessing values"),(0,i.kt)("p",null,"Retrieve the enumerated values by keys."),(0,i.kt)("p",null,"The reference equality of retrieved values is preserved."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"const apple = Fruit.Apple;\nconst orange = Fruit.Orange;\n\nconsole.log(apple === Fruit.Apple); // true\nconsole.log(apple === orange);      // false\n")),(0,i.kt)("h2",{id:"exclusive-typing"},"Exclusive typing"),(0,i.kt)("p",null,"The types of the values does not overlap each other."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"type T = typeof Fruit.Apple & typeof Fruit.Orange; // never\n")),(0,i.kt)("h2",{id:"reverse-mapping"},"Reverse mapping"),(0,i.kt)("p",null,"Native TypeScript enums supports ",(0,i.kt)("strong",{parentName:"p"},"reverse mapping"),", which allows to retrieve keys back from the enum values."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'enum _Fruit { Apple, Orange, Pear, Strawberry }\n\nconsole.log(_Fruit[_Fruit.Apple]);  // "Apple"\nconsole.log(_Fruit[_Fruit.Orange]); // "Orange"\n')),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"extend"),"ed enum values are ",(0,i.kt)("strong",{parentName:"p"},"objects"),", so it is not an indexable type in JavaScript. Instead, it provides ",(0,i.kt)("inlineCode",{parentName:"p"},"keyOf")," API to support reverse mapping."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'console.log(Fruit.keyOf(Fruit.Apple));  // "Apple"\nconsole.log(Fruit.keyOf(Fruit.Orange)); // "Orange"\n')),(0,i.kt)("h2",{id:"conversion-to-primitives"},"Conversion to primitives"),(0,i.kt)("p",null,"When converted to string via ",(0,i.kt)("inlineCode",{parentName:"p"},"toString()"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"extend"),"ed enums have the same behavior with their native form."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'console.log(Fruit.Apple.toString()); // "0"\n')),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"extend"),"ed enums also implement ",(0,i.kt)("inlineCode",{parentName:"p"},"toJSON()"),", so JSON serialization is done seamlessly without additional processing."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'const user = {\n  id: \'42\',\n  favoriteFruits: [Fruit.Apple, Fruit.Strawberry],\n}\n\nconsole.log(JSON.stringify(user)); // {"id":"42","favoriteFruits":[0,3]}\n')),(0,i.kt)("h3",{id:"keyof"},(0,i.kt)("inlineCode",{parentName:"h3"},"keyOf")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"keyOf")," retrieves the key from the enum value itself."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'Fruit.Apple.keyOf();  // "Apple"\nFruit.Orange.keyOf(); // "Orange"\n')),(0,i.kt)("h3",{id:"valueof"},(0,i.kt)("inlineCode",{parentName:"h3"},"valueOf")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"valueOf")," retrieves the primitive value from the enum value itself."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"Fruit.Apple.valueOf();  // 0\nFruit.Orange.valueOf(); // 1\n")))}v.isMDXComponent=!0}}]);